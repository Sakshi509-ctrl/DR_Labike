import React, { useState } from 'react';
import { X, Save, Eye, EyeOff, Palette } from 'lucide-react';

interface ReadMoreContent {
    title: string;
    image: string;
    content: string;
    author?: string;
    publishDate?: string;
}

interface ButtonStyle {
    text: string;
    backgroundColor: string;
    textColor: string;
    borderColor: string;
    borderRadius: string;
    fontSize: string;
    padding: string;
}

interface BlogData {
    id: number;
    title: string;
    category: string;
    shortDescription: string;
    image: string;
    readMoreContent: ReadMoreContent;
    buttonStyle: ButtonStyle;
    isPublished: boolean;
}

interface BlogEditorProps {
    blog: BlogData;
    onSave: (blog: BlogData) => void;
    onClose: () => void;
}

const BlogEditor: React.FC<BlogEditorProps> = ({ blog, onSave, onClose }) => {
    const [editedBlog, setEditedBlog] = useState<BlogData>(blog);
    const [previewMode, setPreviewMode] = useState(false);

    // Auto-generate Read More content for new blogs
    React.useEffect(() => {
        if (!blog.id && !editedBlog.readMoreContent.content) {
            const autoGeneratedContent = `
                <h2>${editedBlog.title || 'New Blog Title'}</h2>
                <p>This is the detailed content for your new blog. You can edit this content to include:</p>
                <ul>
                    <li>Detailed explanations</li>
                    <li>Step-by-step guides</li>
                    <li>Important information</li>
                    <li>Additional resources</li>
                </ul>
                <p>Feel free to customize this content with your own information and formatting.</p>
            `;
            
            setEditedBlog(prev => ({
                ...prev,
                readMoreContent: {
                    ...prev.readMoreContent,
                    title: editedBlog.title || 'New Blog Title',
                    image: editedBlog.image || '',
                    content: autoGeneratedContent
                },
                buttonStyle: {
                    text: 'Read More',
                    backgroundColor: '#3B82F6',
                    textColor: '#FFFFFF',
                    borderColor: '#3B82F6',
                    borderRadius: '8px',
                    fontSize: '14px',
                    padding: '8px 16px'
                }
            }));
        }
    }, [blog.id, editedBlog.title, editedBlog.image]);

    const handleInputChange = (field: keyof BlogData, value: any) => {
        setEditedBlog(prev => ({ ...prev, [field]: value }));
    };

    const handleReadMoreChange = (field: keyof ReadMoreContent, value: any) => {
        setEditedBlog(prev => ({
            ...prev,
            readMoreContent: { ...prev.readMoreContent, [field]: value }
        }));
    };

    const handleButtonStyleChange = (field: keyof ButtonStyle, value: any) => {
        setEditedBlog(prev => ({
            ...prev,
            buttonStyle: { ...prev.buttonStyle, [field]: value }
        }));
    };

    const handleSave = () => {
        onSave(editedBlog);
    };

    const togglePreview = () => {
        setPreviewMode(!previewMode);
    };

    if (previewMode) {
        return (
            <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
                <div className="bg-white rounded-lg max-w-6xl w-full max-h-[90vh] overflow-y-auto">
                    <div className="p-6">
                        <div className="flex justify-between items-start mb-4">
                            <h2 className="text-3xl font-bold text-gray-800 pr-4">
                                {editedBlog.readMoreContent.title}
                            </h2>
                            <div className="flex gap-2">
                                <button
                                    onClick={togglePreview}
                                    className="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg flex items-center gap-2 transition-colors duration-300"
                                >
                                    <EyeOff className="w-4 h-4" />
                                    Exit Preview
                                </button>
                                <button
                                    onClick={onClose}
                                    className="text-gray-500 hover:text-gray-700 text-2xl font-bold"
                                >
                                    ×
                                </button>
                            </div>
                        </div>
                        
                        {editedBlog.readMoreContent.image && (
                            <img 
                                src={editedBlog.readMoreContent.image} 
                                alt={editedBlog.readMoreContent.title}
                                className="w-full h-64 object-cover rounded-lg mb-6"
                            />
                        )}
                        
                        <div 
                            className="prose max-w-none"
                            dangerouslySetInnerHTML={{ __html: editedBlog.readMoreContent.content }}
                        />
                    </div>
                </div>
            </div>
        );
    }

    return (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
            <div className="bg-white rounded-lg max-w-7xl w-full max-h-[90vh] overflow-y-auto">
                <div className="p-6">
                    <div className="flex justify-between items-center mb-6">
                        <h2 className="text-2xl font-bold text-gray-800">
                            {blog.id ? 'Edit Blog' : 'Create New Blog'}
                        </h2>
                        <div className="flex gap-2">
                            <button
                                onClick={togglePreview}
                                className="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg flex items-center gap-2 transition-colors duration-300"
                            >
                                <Eye className="w-4 h-4" />
                                Preview
                            </button>
                            <button
                                onClick={handleSave}
                                className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center gap-2 transition-colors duration-300"
                            >
                                <Save className="w-4 h-4" />
                                Save
                            </button>
                            <button
                                onClick={onClose}
                                className="text-gray-500 hover:text-gray-700 text-2xl font-bold"
                            >
                                ×
                            </button>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                        {/* Left Column - Basic Info */}
                        <div className="space-y-4">
                            <h3 className="text-lg font-semibold text-gray-700 border-b pb-2">Basic Information</h3>
                            
                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Blog Title</label>
                                <input
                                    type="text"
                                    value={editedBlog.title}
                                    onChange={(e) => handleInputChange('title', e.target.value)}
                                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                                    placeholder="Enter blog title"
                                />
                            </div>

                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Category</label>
                                <input
                                    type="text"
                                    value={editedBlog.category}
                                    onChange={(e) => handleInputChange('category', e.target.value)}
                                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                                    placeholder="Enter category"
                                />
                            </div>

                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Short Description</label>
                                <textarea
                                    value={editedBlog.shortDescription}
                                    onChange={(e) => handleInputChange('shortDescription', e.target.value)}
                                    rows={3}
                                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                                    placeholder="Enter short description"
                                />
                            </div>

                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Image URL</label>
                                <input
                                    type="text"
                                    value={editedBlog.image}
                                    onChange={(e) => handleInputChange('image', e.target.value)}
                                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                                    placeholder="Enter image URL"
                                />
                            </div>

                            <div className="flex items-center gap-2">
                                <input
                                    type="checkbox"
                                    id="isPublished"
                                    checked={editedBlog.isPublished}
                                    onChange={(e) => handleInputChange('isPublished', e.target.checked)}
                                    className="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
                                />
                                <label htmlFor="isPublished" className="text-gray-700 font-semibold">
                                    Publish immediately
                                </label>
                            </div>
                        </div>

                        {/* Middle Column - Read More Content */}
                        <div className="space-y-4">
                            <h3 className="text-lg font-semibold text-gray-700 border-b pb-2">Read More Content</h3>
                            
                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Read More Title</label>
                                <input
                                    type="text"
                                    value={editedBlog.readMoreContent.title}
                                    onChange={(e) => handleReadMoreChange('title', e.target.value)}
                                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                                    placeholder="Enter read more title"
                                />
                            </div>

                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Read More Image URL</label>
                                <input
                                    type="text"
                                    value={editedBlog.readMoreContent.image}
                                    onChange={(e) => handleReadMoreChange('image', e.target.value)}
                                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                                    placeholder="Enter read more image URL"
                                />
                            </div>

                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Full Content (HTML)</label>
                                <textarea
                                    value={editedBlog.readMoreContent.content}
                                    onChange={(e) => handleReadMoreChange('content', e.target.value)}
                                    rows={15}
                                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 font-mono text-sm"
                                    placeholder="Enter your blog content using HTML tags..."
                                />
                                <p className="text-xs text-gray-500 mt-1">
                                    You can use HTML tags like &lt;h2&gt;, &lt;p&gt;, &lt;ul&gt;, &lt;li&gt;, etc.
                                </p>
                            </div>
                        </div>

                        {/* Right Column - Button Customization */}
                        <div className="space-y-4">
                            <h3 className="text-lg font-semibold text-gray-700 border-b pb-2 flex items-center gap-2">
                                <Palette className="w-5 h-5" />
                                Button Customization
                            </h3>
                            
                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Button Text</label>
                                <input
                                    type="text"
                                    value={editedBlog.buttonStyle.text}
                                    onChange={(e) => handleButtonStyleChange('text', e.target.value)}
                                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                                    placeholder="e.g., Read More, Learn More, View Details"
                                />
                            </div>

                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Background Color</label>
                                <input
                                    type="color"
                                    value={editedBlog.buttonStyle.backgroundColor}
                                    onChange={(e) => handleButtonStyleChange('backgroundColor', e.target.value)}
                                    className="w-full h-10 border border-gray-300 rounded-lg cursor-pointer"
                                />
                            </div>

                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Text Color</label>
                                <input
                                    type="color"
                                    value={editedBlog.buttonStyle.textColor}
                                    onChange={(e) => handleButtonStyleChange('textColor', e.target.value)}
                                    className="w-full h-10 border border-gray-300 rounded-lg cursor-pointer"
                                />
                            </div>

                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Border Color</label>
                                <input
                                    type="color"
                                    value={editedBlog.buttonStyle.borderColor}
                                    onChange={(e) => handleButtonStyleChange('borderColor', e.target.value)}
                                    className="w-full h-10 border border-gray-300 rounded-lg cursor-pointer"
                                />
                            </div>

                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Border Radius</label>
                                <select
                                    value={editedBlog.buttonStyle.borderRadius}
                                    onChange={(e) => handleButtonStyleChange('borderRadius', e.target.value)}
                                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                                >
                                    <option value="0px">No Radius</option>
                                    <option value="4px">Small (4px)</option>
                                    <option value="8px">Medium (8px)</option>
                                    <option value="12px">Large (12px)</option>
                                    <option value="20px">Extra Large (20px)</option>
                                    <option value="50%">Fully Rounded</option>
                                </select>
                            </div>

                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Font Size</label>
                                <select
                                    value={editedBlog.buttonStyle.fontSize}
                                    onChange={(e) => handleButtonStyleChange('fontSize', e.target.value)}
                                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                                >
                                    <option value="12px">Small (12px)</option>
                                    <option value="14px">Medium (14px)</option>
                                    <option value="16px">Large (16px)</option>
                                    <option value="18px">Extra Large (18px)</option>
                                </select>
                            </div>

                            <div>
                                <label className="block text-gray-700 font-semibold mb-2">Padding</label>
                                <select
                                    value={editedBlog.buttonStyle.padding}
                                    onChange={(e) => handleButtonStyleChange('padding', e.target.value)}
                                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                                >
                                    <option value="4px 8px">Small</option>
                                    <option value="8px 16px">Medium</option>
                                    <option value="12px 24px">Large</option>
                                    <option value="16px 32px">Extra Large</option>
                                </select>
                            </div>

                            {/* Button Preview */}
                            <div className="mt-4 p-4 bg-gray-50 rounded-lg">
                                <h4 className="font-semibold text-gray-700 mb-2">Button Preview:</h4>
                                <button
                                    style={{
                                        backgroundColor: editedBlog.buttonStyle.backgroundColor,
                                        color: editedBlog.buttonStyle.textColor,
                                        border: `2px solid ${editedBlog.buttonStyle.borderColor}`,
                                        borderRadius: editedBlog.buttonStyle.borderRadius,
                                        fontSize: editedBlog.buttonStyle.fontSize,
                                        padding: editedBlog.buttonStyle.padding,
                                        cursor: 'default'
                                    }}
                                    className="w-full"
                                >
                                    {editedBlog.buttonStyle.text}
                                </button>
                            </div>
                        </div>
                    </div>

                    {/* HTML Tips */}
                    <div className="mt-6 p-4 bg-gray-50 rounded-lg">
                        <h4 className="font-semibold text-gray-700 mb-2">HTML Formatting Tips:</h4>
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600">
                            <div>
                                <p><strong>Headings:</strong> &lt;h2&gt;Title&lt;/h2&gt;</p>
                                <p><strong>Paragraphs:</strong> &lt;p&gt;Text&lt;/p&gt;</p>
                                <p><strong>Lists:</strong> &lt;ul&gt;&lt;li&gt;Item&lt;/li&gt;&lt;/ul&gt;</p>
                            </div>
                            <div>
                                <p><strong>Bold:</strong> &lt;strong&gt;Bold text&lt;/strong&gt;</p>
                                <p><strong>Italic:</strong> &lt;em&gt;Italic text&lt;/em&gt;</p>
                                <p><strong>Links:</strong> &lt;a href="#"&gt;Link text&lt;/a&gt;</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default BlogEditor;
